□ 遊戲要素抽象化 (Abstraction)

有鑑於 MudOS 的功能越來越低階化﹐許多以往的遊戲設計者往往都必須兼具程式設計
者的能力﹐而且這項要求越來越高﹐使得不少具有創意的遊戲設計者因而視 LPC 為畏
途﹐所以這一版的 es2 mudlib 在設計的目標上做了一些改變﹐ 也就是以抽象化的系
統組態來提供設計遊戲者更大的空間﹐因此我盡量將 game-specific 部份從重要的界
面中抽離﹐使得這個系統可以「描述」各種不同的世界。

Note: 所謂的 game-specific 就是指個別遊戲所獨有的設定﹐譬如以 fantasy 為背
      景的 game 跟以 scientific 為背景的 game 就有相當大的差異﹐如屬性、人
      物狀態、技能等﹐因此如果設計一個界面如 query_strength() 來取得一個人
      物的力量值﹐那麼當遊戲設計者想改變人物的屬性種類時﹐就會遭遇到相當大
      的共通性(consistency)問題﹐因此抽象化的作法是 query_attr(<attribute>)
      ﹐使得能在減少修改 source code 的狀況下容許系統的改變。
